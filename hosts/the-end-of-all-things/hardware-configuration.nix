# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, inputs, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" "apple-bce" "apple-ib_tb" "apple-ib-als" "apple-gmux" ];
  boot.extraModprobeConfig = " options apple-gmux force_igd=y ";
  boot.extraModulePackages = [ 
   # (config.boot.kernelPackages.callPackage (inputs.self.outPath + "/packages/macbook12-spi-driver/package.nix") {})  
  ];
  boot.kernelParams = [
    "brcmfmac.feature_disable=0x82000"
  ];

  services.udev.extraRules = ''
    KERNEL=="card2", SUBSYSTEM=="drm", DRIVERS=="amdgpu", ATTR{device/power_dpm_force_performance_level}="low"
  '';

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0f1u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0u2u1c2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.graphics.extraPackages = [ 
    pkgs.intel-media-driver
    pkgs.rocmPackages.clr.icd
    pkgs.amdvlk
  ];

  # we don't need this because of our boot.extraModprobeConfig
  # hardware.apple-t2.enableAppleSetOsLoader = true;
}
